"""implementa logica de excluir tabelas

Revision ID: 266787f27034
Revises: 015d050b2728
Create Date: 2025-02-05 12:47:30.080258

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '266787f27034'
down_revision: Union[str, None] = '015d050b2728'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=sa.TIMESTAMP(),
               nullable=False)
        batch_op.drop_constraint('fk_audit_logs_performed_by_id', type_='foreignkey')

    with op.batch_alter_table('licenses', schema=None) as batch_op:
        batch_op.drop_constraint('fk_licenses_manager_id', type_='foreignkey')
        batch_op.drop_constraint('fk_licenses_assigned_to_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_licenses_manager_id', 'users', ['manager_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_licenses_assigned_to_id', 'users', ['assigned_to_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_constraint('fk_notifications_user_id', type_='foreignkey')
        batch_op.drop_constraint('fk_notifications_license_id', type_='foreignkey')
        batch_op.drop_constraint('fk_notifications_request_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_notifications_request_id', 'renewal_requests', ['request_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_notifications_user_id', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_notifications_license_id', 'licenses', ['license_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('renewal_requests', schema=None) as batch_op:
        batch_op.alter_column('license_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('requested_by_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('manager_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint('fk_renewal_requests_requested_by_id', type_='foreignkey')
        batch_op.drop_constraint('fk_renewal_requests_manager_id', type_='foreignkey')
        batch_op.drop_constraint('fk_renewal_requests_license_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_renewal_requests_license_id', 'licenses', ['license_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_renewal_requests_manager_id', 'users', ['manager_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_renewal_requests_requested_by_id', 'users', ['requested_by_id'], ['id'], ondelete='SET NULL')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('renewal_requests', schema=None) as batch_op:
        batch_op.drop_constraint('fk_renewal_requests_requested_by_id', type_='foreignkey')
        batch_op.drop_constraint('fk_renewal_requests_manager_id', type_='foreignkey')
        batch_op.drop_constraint('fk_renewal_requests_license_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_renewal_requests_license_id', 'licenses', ['license_id'], ['id'])
        batch_op.create_foreign_key('fk_renewal_requests_manager_id', 'users', ['manager_id'], ['id'])
        batch_op.create_foreign_key('fk_renewal_requests_requested_by_id', 'users', ['requested_by_id'], ['id'])
        batch_op.alter_column('manager_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('requested_by_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('license_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_constraint('fk_notifications_license_id', type_='foreignkey')
        batch_op.drop_constraint('fk_notifications_user_id', type_='foreignkey')
        batch_op.drop_constraint('fk_notifications_request_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_notifications_request_id', 'renewal_requests', ['request_id'], ['id'])
        batch_op.create_foreign_key('fk_notifications_license_id', 'licenses', ['license_id'], ['id'])
        batch_op.create_foreign_key('fk_notifications_user_id', 'users', ['user_id'], ['id'])

    with op.batch_alter_table('licenses', schema=None) as batch_op:
        batch_op.drop_constraint('fk_licenses_assigned_to_id', type_='foreignkey')
        batch_op.drop_constraint('fk_licenses_manager_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_licenses_assigned_to_id', 'users', ['assigned_to_id'], ['id'])
        batch_op.create_foreign_key('fk_licenses_manager_id', 'users', ['manager_id'], ['id'])

    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_audit_logs_performed_by_id', 'users', ['performed_by_id'], ['id'])
        batch_op.alter_column('timestamp',
               existing_type=sa.TIMESTAMP(),
               nullable=True)

    # ### end Alembic commands ###
