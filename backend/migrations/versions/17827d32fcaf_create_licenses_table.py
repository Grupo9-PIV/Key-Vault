"""create licenses table

Revision ID: 17827d32fcaf
Revises: 65ca3ec333da
Create Date: 2025-02-02 21:59:31.372444

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '17827d32fcaf'
down_revision: Union[str, None] = '65ca3ec333da'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('licenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assigned_to_id', sa.Integer(), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('software_name', sa.String(), nullable=False),
    sa.Column('license_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('developed_by', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('purchase_date', sa.DateTime(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('license_key', sa.String(), nullable=True),
    sa.Column('current_usage', sa.Integer(), nullable=True),
    sa.Column('subscription_plan', sa.String(), nullable=True),
    sa.Column('conditions', sa.Text(), nullable=True),
    sa.Column('priority', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], name='fk_licenses_assigned_to_id'),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], name='fk_licenses_manager_id'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('licenses')
    # ### end Alembic commands ###
