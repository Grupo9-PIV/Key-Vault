name: key-vault

services:
  web-server:
    container_name: frontend
    build:
      context: ..
      dockerfile: nginx/Dockerfile
    ports:
      - 80:80
    depends_on:
      - api
    networks:
      - frontend-network

  api:
    container_name: backend
    build:
      context: ..
      dockerfile: backend/Dockerfile
    expose:
      - 8000
    env_file:
      - ../.env
    entrypoint: ./entrypoint.sh
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-network
      - frontend-network

  db:
    container_name: postgresql
    image: postgres:17
    restart: always
    env_file:
      - ../.env
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -h db"
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - ../.env
    ports:
      - 15432:80
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - backend-network

volumes:
  pgdata:
  pgadmin:

networks:
  frontend-network:
  backend-network:
